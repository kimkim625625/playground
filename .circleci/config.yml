version: 2
jobs :
  build:
    docker:
      - image: gemcook/node:8.11.1
    steps:
      - checkout

      - restore_cache:
          key: xx-xx-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - run:
          name: 各種情報表示
          command:
            echo node \"$(node -v)\"
            echo yarn \"$(yarn --version)\"
            echo python \"$(python3 --version)\"
            echo awscli \"$(aws --version)\"
            echo pwd \"$(pwd)\"
            echo yarn cache dir \"$(yarn cache dir)\"

      - run:
          name: 依存関係のインストール
          command: yarn install --frozen-lockfile --non-interactive

      - run:
          name: eslintチェック
          command: yarn run eslint --ext .js,.jsx .

      - run:
          name: ビルドファイルを作成
          command: |
            echo "${CIRCLE_BRANCH}"
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              make develop
            elif [ "${CIRCLE_BRANCH}" == "release" ]; then
              make release
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              make master
            fi
      - save_cache:
          key: xx-xx-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - /home/node/project/node_modules
            - /home/node/.cache/yarn/

      - run:
          name: S3へデプロイ
          command: |
            echo "${CIRCLE_BRANCH}"
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              aws s3 sync dist s3://develop.xxxx.xxx.xxx;
            elif [ "${CIRCLE_BRANCH}" == "release" ]; then
              aws s3 sync dist s3://release.xxxx.xxx.xxx;
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              aws s3 sync dist s3://xxxx.xxx.xxx;
            else
              echo 'skip S3 deploy'
            fi
      - run:
          name: CloudFrontのキャッシュを削除
          command: |
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              aws cloudfront create-invalidation --distribution-id XXXXXXXX --paths '/*'
            elif [ "${CIRCLE_BRANCH}" == "release" ]; then
              aws cloudfront create-invalidation --distribution-id XXXXXXXX --paths '/*'
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              aws cloudfront create-invalidation --distribution-id XXXXXXXX --paths '/*'
            else
              echo 'skip invalidate CloudFront cache'
            fi